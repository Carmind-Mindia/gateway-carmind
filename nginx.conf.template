worker_processes 1;
error_log logs/error.log;
events {
    worker_connections 1024;
}

env RESTY_SESSION_AUDIENCE;
env RESTY_SESSION_SECRET;
env SERVER_NAME;
env FRONT_HOST;
env CORS_ALLOWED;
env ORIGIN_SERVER;


http {
    resolver 127.0.0.11 ipv6=off;

    init_by_lua_block {
        require "resty.session".init({
            remember = true,
            audience = "$RESTY_SESSION_AUDIENCE",
            secret   = "$RESTY_SESSION_SECRET",
            storage  = "cookie",
        })
    }


    server {
        listen 80;
        server_name $SERVER_NAME; # Reemplaza con tu dominio
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        location / {
            return 301 https://${DOLLAR}host${DOLLAR}request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name $SERVER_NAME;

        ssl_certificate /etc/letsencrypt/live/$SERVER_NAME/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/$SERVER_NAME/privkey.pem;

        proxy_set_header Host ${DOLLAR}host;
        proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
        proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;

        location ~ /*api/*(?<service>[^/].*[^/])/*(?<path>/.*) {
            lua_need_request_body on;

            set ${DOLLAR}service ${DOLLAR}service;
            set ${DOLLAR}path ${DOLLAR}path;

            content_by_lua_file /usr/local/openresty/nginx/scripts/validate.lua;
        }

        location ~ /*ws/*(?<service>[^/].*[^/])/*(?<path>/.*) {
            lua_need_request_body on;

            set ${DOLLAR}service ${DOLLAR}service;
            set ${DOLLAR}path ${DOLLAR}path;

            set ${DOLLAR}proxy_uri "";

            content_by_lua_file /usr/local/openresty/nginx/scripts/validate_ws.lua;

            proxy_pass "ws://${DOLLAR}proxy_uri";
        }

        location / {
            # Redirige todas las otras solicitudes al contenedor '$FRONT_HOST' en el puerto 3000
            proxy_pass $FRONT_HOST;
            proxy_redirect default;
        }

    }
}